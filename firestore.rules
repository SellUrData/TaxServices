rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.role in ['admin', 'ceo'];
    }
    
    function isCEO() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.role == 'ceo';
    }

    // Allow anyone to read their own employee document
    match /employees/{userId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || isAdmin()
      );
      // Only CEO can create/update/delete employee documents
      allow write: if isCEO();
      // Allow initial creation of employee document
      allow create: if request.auth.uid == userId;
    }

    // Clients collection
    match /clients/{clientId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Documents collection
    match /documents/{documentId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }

    // Tax returns collection
    match /taxReturns/{returnId} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated();
    }
  }
}
