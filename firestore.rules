rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isCEO() {
      return get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.role == 'ceo';
    }
    
    function isEmployee() {
      return get(/databases/$(database)/documents/employees/$(request.auth.uid)).data.role == 'employee';
    }

    function isClient() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'client';
    }

    // Employee collection rules
    match /employees/{employeeId} {
      allow read: if isAuthenticated() && (request.auth.uid == employeeId || isAdmin() || isCEO());
      allow write: if isAuthenticated() && (isAdmin() || isCEO());
    }

    // Users (clients) collection rules
    match /users/{userId} {
      allow read: if isAuthenticated() && (
        request.auth.uid == userId || 
        isEmployee() || 
        isAdmin() || 
        isCEO()
      );
      allow create: if true; // Allow anyone to register as a client
      allow update, delete: if isAuthenticated() && (
        request.auth.uid == userId || 
        isAdmin() || 
        isCEO()
      );
    }

    // Documents collection rules
    match /documents/{documentId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || // Client can read their own documents
        isEmployee() || // Employees can read all client documents
        isAdmin() || 
        isCEO()
      );
      allow write: if isAuthenticated() && (
        (resource.data.userId == request.auth.uid && request.resource.data.userId == request.auth.uid) || // Clients can only write their own documents
        isEmployee() || // Employees can write documents for clients
        isAdmin() || 
        isCEO()
      );
    }
  }
}
